const fs = require('fs');
const path = require('path');

// Arquivos para processar
const files = [
  'src/services/integrationService.ts',
  'src/services/metaCapiService.ts',
  'src/pages/PublicForm.tsx',
  'src/utils/parentPageScriptSimple.js'
];

// Fun√ß√£o para remover logs de debug
function removeDebugLogs(content) {
  // Remover console.log com Debug
  content = content.replace(/console\.log\(['"`]üîç Debug[^'"`]*['"`][^)]*\);?\s*/g, '');
  content = content.replace(/console\.log\(['"`]üìò Debug[^'"`]*['"`][^)]*\);?\s*/g, '');
  content = content.replace(/console\.log\(['"`]üìû Debug[^'"`]*['"`][^)]*\);?\s*/g, '');
  content = content.replace(/console\.log\(['"`]üë§ Debug[^'"`]*['"`][^)]*\);?\s*/g, '');
  content = content.replace(/console\.log\(['"`]üîó Debug[^'"`]*['"`][^)]*\);?\s*/g, '');
  content = content.replace(/console\.log\(['"`]‚ö†Ô∏è Debug[^'"`]*['"`][^)]*\);?\s*/g, '');
  content = content.replace(/console\.log\(['"`]‚úÖ Debug[^'"`]*['"`][^)]*\);?\s*/g, '');
  content = content.replace(/console\.log\(['"`]‚ùå Debug[^'"`]*['"`][^)]*\);?\s*/g, '');
  
  // Remover console.log com Debug (formato alternativo)
  content = content.replace(/console\.log\(['"`]Debug[^'"`]*['"`][^)]*\);?\s*/g, '');
  
  // Remover linhas vazias extras
  content = content.replace(/\n\s*\n\s*\n/g, '\n\n');
  
  return content;
}

// Processar cada arquivo
files.forEach(filePath => {
  try {
    const fullPath = path.join(process.cwd(), filePath);
    if (fs.existsSync(fullPath)) {
      let content = fs.readFileSync(fullPath, 'utf8');
      const originalContent = content;
      
      content = removeDebugLogs(content);
      
      if (content !== originalContent) {
        fs.writeFileSync(fullPath, content, 'utf8');
        console.log(`‚úÖ Processado: ${filePath}`);
      } else {
        console.log(`‚è≠Ô∏è Nenhuma altera√ß√£o: ${filePath}`);
      }
    } else {
      console.log(`‚ùå Arquivo n√£o encontrado: ${filePath}`);
    }
  } catch (error) {
    console.error(`‚ùå Erro ao processar ${filePath}:`, error.message);
  }
});

console.log('üéâ Remo√ß√£o de logs de debug conclu√≠da!');
